name: Build and deploy Zola to separate GitHub Pages repo

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout blog repo
        uses: actions/checkout@v4
        with:
          path: nix-blog

      - name: Install Zola
        run: |
          set -e
          ZOLA_VERSION="0.20.0"
          echo "Downloading Zola v${ZOLA_VERSION}..."
          wget "https://github.com/getzola/zola/releases/download/v${ZOLA_VERSION}/zola-v${ZOLA_VERSION}-x86_64-unknown-linux-gnu.tar.gz"
          tar -xzf "zola-v${ZOLA_VERSION}-x86_64-unknown-linux-gnu.tar.gz"
          sudo mv zola /usr/local/bin/
          echo "Zola version:"
          zola --version

      - name: Build Zola site
        working-directory: nix-blog
        run: |
          set -e
          echo "Building Zola site..."
          zola build

      - name: Configure Git
        run: |
          git config --global user.name "saylesss88"
          git config --global user.email "saylesss88@proton.me"

      - name: Deploy to separate GitHub Pages repo
        env:
          GH_PAGES_TOKEN: ${{ secrets.GH_PAGES_TOKEN }}
        run: |
          set -e
          REPO="saylesss88/saylesss88.github.io"
          TARGET_BRANCH="main"
          PUBLISH_DIR="nix-blog/public"

          echo "Cloning GitHub Pages repo..."
          git clone --depth 1 --branch "$TARGET_BRANCH" "https://x-access-token:${GH_PAGES_TOKEN}@github.com/${REPO}.git" "$REPO"
          cd "$REPO"

          echo "Cleaning existing files (excluding .git and rss.xml)..."
          find . -mindepth 1 ! -name ".git" ! -name "rss.xml" -exec rm -rf {} +

          echo "Copying new site files..."
          cp -r "../$PUBLISH_DIR"/* .

          echo "Checking for changes..."
          git add -A
          if [[ -z "$(git status --porcelain)" ]]; then
            echo "No changes to commit"
          else
            echo "Committing and pushing changes..."
            git commit -m "Deploy Zola site"
            git push origin "$TARGET_BRANCH"
          fi
